{"version":3,"sources":["context/Context.tsx","components/AddClassification/AddClassification.tsx","components/AddClassification/index.tsx","components/Item/Item.tsx","components/Item/index.tsx","components/Lot/Lot.tsx","components/Lot/index.tsx","components/AdditionalLots/index.tsx","components/AdditionalLots/AdditionalLots.tsx","components/Main/Main.tsx","components/Main/index.tsx","context/Reducer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FormContext","createContext","state","tender","title","description","classification","scheme","id","lots","items","dispatch","Btn","styled","button","AddClassification","index","classIndex","useContext","margin","top","bottom","variant","isDisabled","placeholder","value","additionalClassification","onChange","type","payload","path","onClick","className","Item","relatedLot","map","item","key","direction","Flex","css","name","v","options","label","RadioGroup","length","alignment","horizontal","appearance","intent","Lot","itemId","uuid","fields","removeLot","isRequired","sheme","AdditionalLots","lot","Form","form","Label","Main","vertical","Text","onSubmit","e","preventDefault","console","log","reducer","action","set","filter","item1","find","indexOf","newLot","slice","relatedId","newItem","itemIndex","currentItem","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qRAmBaA,EAAcC,wBAA+E,CACxGC,MAfsB,CACtBC,OAAQ,CACNC,MAAO,GACPC,YAAa,GACbC,eAAgB,CACdC,OAAQ,MACRC,GAAI,GACJH,YAAa,IAEfI,KAAM,GACNC,MAAO,KAMTC,SAAU,e,oLCRZ,IAAMC,EAAMC,UAAOC,OAAV,KCXMC,EDkBkB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,WAAqC,EAClDC,qBAAWlB,GAA/BE,EADsE,EACtEA,MAAOS,EAD+D,EAC/DA,SAMf,OACE,kBAAC,IAAD,CAAMQ,OAAQ,CAAEC,IAAK,UAAWC,OAAQ,YACtC,+BACE,kBAAC,IAAD,CAAMC,QAAQ,SAAd,WACA,kBAAC,YAAD,CAAWC,YAAY,EAAMC,YAAY,MAAMC,MAAM,SAEvD,+BACE,kBAAC,IAAD,CAAMH,QAAQ,SAAd,cACA,kBAAC,YAAD,CACEE,YAAY,KACZC,MAAOvB,EAAMC,OAAOO,MAAMM,GAAOU,yBAAyBT,GAAYT,GACtEmB,SAAU,SAACF,GAAD,OACRd,EAAS,CACPiB,KAAM,MACNC,QAASJ,EACTK,KAAK,gBAAD,OAAkBd,EAAlB,sCAAqDC,EAArD,cAKZ,+BACE,kBAAC,IAAD,CAAMK,QAAQ,SAAd,wBACA,kBAAC,YAAD,CACEE,YAAY,cACZC,MAAOvB,EAAMC,OAAOO,MAAMM,GAAOU,yBAAyBT,GAAYZ,YACtEsB,SAAU,SAACF,GAAD,OACRd,EAAS,CACPiB,KAAM,MACNC,QAASJ,EACTK,KAAK,gBAAD,OAAkBd,EAAlB,sCAAqDC,EAArD,uBAKZ,kBAACL,EAAD,CAAKmB,QAtCW,WAClBpB,EAAS,CAAEiB,KAAM,eAAgBC,QAAS,CAAEb,MAAOA,EAAOC,WAAYA,GAAca,KAAM,OAsCtF,uBAAGE,UAAU,mB,mUE7Cd,ICfQC,EDeK,SAAC,GAAoC,EAAlCC,WAAmC,IAAvBlB,EAAsB,EAAtBA,MAAsB,EAC3BE,qBAAWlB,GAA/BE,EAD+C,EAC/CA,MAAOS,EADwC,EACxCA,SAcTL,EAAiBJ,EAAMC,OAAOO,MAAMM,GAAOU,yBAAyBS,KAAI,SAACC,EAAMnB,GAAP,OAC5E,kBAAC,EAAD,CAAmBD,MAAOA,EAAOC,WAAYA,EAAYoB,IAAKpB,OAGhE,OACE,oCACE,kBAAC,IAAD,CACEqB,UAAU,SACVzB,OAAQ,CACN0B,KAAMC,cAAF,OAON,6CAEE,kBAAC,YAAD,CACEb,SAAU,SAACF,GAAD,OAAWd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAK,gBAAD,OAAkBd,EAAlB,uBAGrE,kBAAC,IAAD,CAAMG,OAAQ,CAAEC,IAAK,UAAWC,OAAQ,YACtC,+BACE,kBAAC,IAAD,CAAMC,QAAQ,SAAd,WACA,kBAAC,YAAD,CAAWC,YAAY,EAAMC,YAAY,MAAMC,MAAM,SAEvD,+BACE,kBAAC,IAAD,CAAMH,QAAQ,SAAd,cACA,kBAAC,YAAD,CACEE,YAAY,KACZG,SAAU,SAACF,GAAD,OACRd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAK,gBAAD,OAAkBd,EAAlB,6BAIlD,+BACE,kBAAC,IAAD,CAAMM,QAAQ,SAAd,wBACA,kBAAC,YAAD,CACEE,YAAY,cACZG,SAAU,SAACF,GAAD,OACRd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAK,iBAAD,OAAmBd,EAAnB,uCAKpD,2CAEE,kBAAC,YAAD,CACEyB,KAAK,WACLd,SAAU,SAACe,GAAD,OAAO/B,EAAS,CAAEiB,KAAM,MAAOC,QAASa,EAAGZ,KAAK,gBAAD,OAAkBd,EAAlB,oBAG7D,kBAAC,IAAD,CACEsB,UAAU,MACVG,KAAK,OACLE,QAAS,CACP,EAAK,CACHC,MAAO,QACPnB,MAAO,KAET,EAAK,CACHmB,MAAO,OACPnB,MAAO,MAGXE,SAAU,SAACe,GAAD,OACR/B,EAAS,CAAEiB,KAAM,MAAOC,QAAS,CAAErB,GAAIkC,EAAEjB,MAAOgB,KAAMC,EAAEE,OAASd,KAAK,gBAAD,OAAkBd,EAAlB,aAEvEH,OAAQ,CACNgC,WAAYL,cAAF,QAMblC,EACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQyB,QAtFU,WACxBpB,EAAS,CACPiB,KAAM,MACNC,QAAS,CAAEtB,OAAQ,MAAOC,GAAI,GAAIH,YAAa,IAC/CyB,KAAK,gBAAD,OAAkBd,EAAlB,sCAAqDd,EAAMC,OAAOO,MAAMM,GAAOU,yBAAyBoB,OAAxG,SAkFA,uBAEF,kBAAC,IAAD,CAAMC,UAAW,CAAEC,WAAY,OAAS7B,OAAQ,CAAEC,IAAK,YACrD,kBAAC,IAAD,CAAQ6B,WAAW,WAAWC,OAAO,WAAWnB,QA7FrC,WACjBpB,EAAS,CAAEiB,KAAM,cAAeC,QAASb,EAAOc,KAAM,OA4FhD,mB,+MEjGH,ICdQqB,EDcI,SAAC,GAAoC,IAAlC3C,EAAiC,EAAjCA,GAAWQ,GAAsB,EAA7BZ,MAA6B,EAAtBY,OAAsB,EACzBE,qBAAWlB,GAA/BE,EAD6C,EAC7CA,MAAOS,EADsC,EACtCA,SACTyC,EAASC,cAoBTC,EAASpD,EAAMC,OAAOO,MAAMyB,KAAI,SAACC,EAAWpB,GAChD,OAAIoB,EAAKF,aAAe1B,EACf,kBAAC,EAAD,CAAM0B,WAAY1B,EAAI6B,IAAKD,EAAK5B,GAAIiB,MAAOW,EAAMpB,MAAOA,IAExD,QAIX,OACE,oCACE,kBAAC,IAAD,CACEsB,UAAU,SACVzB,OAAQ,CACN0B,KAAMC,cAAF,OAQN,kBAAC,IAAD,CAAQS,WAAW,WAAWC,OAAO,WAAWnB,QAAS,kBAvC7C,SAACvB,GACjBG,EAAS,CAAEiB,KAAM,aAAcC,QAAS,CAAErB,GAAIA,GAAMsB,KAAK,eAAD,OAAiBd,EAAjB,OAsCWuC,CAAU/C,KAAzE,cAGA,4CAEE,kBAAC,YAAD,CACEgD,YAAU,EACVf,KAAK,QACLjB,YAAY,YACZG,SAAU,SAACF,GAAD,OAAWd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAK,eAAD,OAAiBd,EAAjB,iBAGpEsC,EACD,kBAAC,IAAD,CAAMnC,OAAQ,CAAEC,IAAK,UAAY2B,UAAW,CAAEC,WAAY,kBACxD,kBAAC,IAAD,CAAQC,WAAW,WAAWC,OAAO,WAAWnB,QAjDxC,WACdpB,EAAS,CACPiB,KAAM,MACNC,QAAS,CACPK,WAAY1B,EACZA,GAAI4C,EACJ/C,YAAa,GACbC,eAAgB,CAAEmD,MAAO,OACzB/B,yBAA0B,IAE5BI,KAAK,gBAAD,OAAkB5B,EAAMC,OAAOO,MAAMoC,OAArC,SAuCA,gBEvEKY,ECMe,WAAO,IAAD,EACNxC,qBAAWlB,GAA/BE,EAD0B,EAC1BA,MAAOS,EADmB,EACnBA,SAETF,EAAOP,EAAMC,OAAOM,KAAK0B,KAAI,SAACwB,EAAK3C,GACvC,OAAO,kBAAC,EAAD,CAAKR,GAAImD,EAAInD,GAAIJ,MAAOuD,EAAIvD,MAAOiC,IAAKsB,EAAInD,GAAIQ,MAAOA,OAG1DR,EAAK6C,cAMX,OACE,oCACG5C,EACD,kBAAC,IAAD,CAAMU,OAAQ,CAAEC,IAAK,UAAY2B,UAAW,CAAEC,WAAY,iBACxD,kBAAC,IAAD,CAAQE,OAAO,WAAWnB,QARjB,WACbpB,EAAS,CAAEiB,KAAM,MAAOC,QAAS,CAAEzB,MAAO,GAAII,GAAIA,GAAMsB,KAAK,eAAD,OAAiB5B,EAAMC,OAAOM,KAAKqC,OAAnC,SAOxD,c,yfCXR,IAAMc,EAAO/C,UAAOgD,KAAV,KAIJC,EAAQjD,UAAO+B,MAAV,KChBImB,EDoBK,WAAO,IAAD,EACI7C,qBAAWlB,GAA/BE,EADgB,EAChBA,MAAOS,EADS,EACTA,SAOf,OACE,gBAAC,IAAD,CACEoC,UAAW,CACTC,WAAY,SACZgB,SAAU,UAEZ1B,UAAU,UAEV,gBAAC,IAAD,CACEhB,QAAQ,KACRT,OAAQ,CACNoD,KAAMzB,cAAF,OAHR,iBAUA,gBAACoB,EAAD,CAAM5B,UAAU,OAAOkC,SAvBN,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,IAAIpE,KAsBR,gBAAC,IAAD,CAAMoB,QAAQ,QAAd,gCACA,gBAAC,IAAD,CACEgB,UAAU,MACVS,UAAW,CAAEC,WAAY,UACzBnC,OAAQ,CACN0B,KAAMC,cAAF,OAKN,gBAACsB,EAAD,qBAEE,gBAAC,YAAD,CACEN,YAAU,EACVf,KAAK,QACLjB,YAAY,eACZG,SAAU,SAACF,GAAD,OAAWd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAM,sBAIzE,gBAAC,IAAD,CACEiB,UAAW,CAAEC,WAAY,UACzBnC,OAAQ,CACN0B,KAAMC,cAAF,OAKN,gBAACsB,EAAD,0BAEE,gBAAC,WAAD,CACEN,YAAU,EACVf,KAAK,cACLjB,YAAY,qBACZG,SAAU,SAACF,GAAD,OAAWd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAM,4BAIzE,gBAAC,IAAD,KACE,gBAACgC,EAAD,eAEE,gBAAC,YAAD,CAAWvC,YAAY,EAAMC,YAAY,MAAMC,MAAM,SAEvD,gBAACqC,EAAD,kBAEE,gBAAC,YAAD,CACEtC,YAAY,KACZG,SAAU,SAACF,GAAD,OAAWd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAM,iCAGvE,gBAACgC,EAAD,2BAEE,gBAAC,YAAD,CACEtC,YAAY,cACZG,SAAU,SAACF,GAAD,OAAWd,EAAS,CAAEiB,KAAM,MAAOC,QAASJ,EAAOK,KAAM,2CAgBzE,gBAAC,EAAD,MACA,gBAAC,IAAD,CACEiB,UAAW,CACTC,WAAY,OAEd7B,OAAQ,CAAEC,IAAK,SAAUC,OAAQ,UAEjC,gBAAC,IAAD,mB,uBE5HGkD,EAAU,SAACrE,EAAYsE,GAClC,OAAQA,EAAO5C,MACb,IAAK,MAEH,OADc,eAAQ6C,cAAIvE,EAAOsE,EAAO1C,KAAM0C,EAAO3C,UAGvD,IAAK,aACH,IAAMnB,EAAQR,EAAMC,OAAOO,MAAMgE,QAAO,SAACtC,GAAD,OAAeA,EAAKF,aAAesC,EAAO3C,QAAQrB,MACpFmE,EAAQzE,EAAMC,OAAOM,KAAKmE,MAAK,SAACjB,GAAD,OAAcA,EAAInD,KAAOgE,EAAO3C,QAAQrB,MACvEQ,EAAQd,EAAMC,OAAOM,KAAKoE,QAAQF,GAClCG,EAAM,sBAAO5E,EAAMC,OAAOM,KAAKsE,MAAM,EAAG/D,IAAlC,YAA6Cd,EAAMC,OAAOM,KAAKsE,MAAM/D,EAAQ,KACzF,MAAO,CACLb,OAAO,2BACFD,EAAMC,QADL,IAEJM,KAAMqE,EACNpE,MAAOA,KAGb,IAAK,WAGH,OAFaR,EAAMC,OAAOM,KAAKmE,MAAK,SAACxC,GAAD,OAAeA,EAAK5B,KAAOgE,EAAO3C,QAAQrB,MACzEJ,MAAQoE,EAAO3C,QAAQzB,MACrB,eACFF,GAEP,IAAK,WACH,MAAO,CACLC,OAAO,2BACFD,EAAMC,QADL,IAEJO,MAAM,GAAD,mBACAR,EAAMC,OAAOO,OADb,CAEH,CACEF,GAAIgE,EAAO3C,QAAQrB,GACnBH,YAAa,GACb6B,WAAYsC,EAAO3C,QAAQmD,gBAMrC,IAAK,cACH,IAAMC,EAAO,sBAAO/E,EAAMC,OAAOO,MAAMqE,MAAM,EAAGP,EAAO3C,UAA1C,YAAuD3B,EAAMC,OAAOO,MAAMqE,MAAMP,EAAO3C,QAAU,KAC9G,MAAO,CACL1B,OAAO,2BACFD,EAAMC,QADL,IAEJO,MAAOuE,KAIb,IAAK,eACH,IAAMC,EAAYV,EAAO3C,QAAQb,MAC3BC,EAAauD,EAAO3C,QAAQZ,WAE5BkE,EAAcjF,EAAMC,OAAOO,MAAMwE,GAEvC,MAAO,CACL/E,OAAO,2BACFD,EAAMC,QADL,IAEJO,MAAM,GAAD,mBACAR,EAAMC,OAAOO,MAAMqE,MAAM,EAAGG,IAD5B,4BAGEC,GAHF,IAIDzD,yBAAyB,GAAD,mBACnBxB,EAAMC,OAAOO,MAAMwE,GAAWxD,yBAAyBqD,MAAM,EAAG9D,IAD7C,YAEnBf,EAAMC,OAAOO,MAAMwE,GAAWxD,yBAAyBqD,MAAM9D,EAAa,QAN9E,YASAf,EAAMC,OAAOO,MAAMqE,MAAMG,EAAY,QAKhD,QACE,OAAOhF,ICzCEkF,MAzBf,WACC,IADc,EAecC,qBAAWd,EAdZ,CAC1BpE,OAAQ,CACPC,MAAO,GACPC,YAAa,GACbC,eAAgB,CACfC,OAAQ,MACRC,GAAI,GACJH,YAAa,IAEdI,KAAM,GACNC,MAAO,MAXK,mBAeNR,EAfM,KAeCS,EAfD,KAgBd,OACC,kBAAC,gBAAD,KACC,kBAACX,EAAYsF,SAAb,CAAsB7D,MAAO,CAAEvB,QAAOS,aACrC,kBAAC,EAAD,SCfgB4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,a","file":"static/js/main.3a6afe1c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nimport { Data } from '../types';\r\n\r\ntype Action = { type: string; payload: any; path: string };\r\n\r\nconst FormState: Data = {\r\n  tender: {\r\n    title: '',\r\n    description: '',\r\n    classification: {\r\n      scheme: 'CPV',\r\n      id: '',\r\n      description: '',\r\n    },\r\n    lots: [],\r\n    items: [],\r\n  },\r\n};\r\n\r\nexport const FormContext = createContext<{ state: typeof FormState; dispatch: (action: Action) => void }>({\r\n  state: FormState,\r\n  dispatch: () => {},\r\n});\r\n","import React, { useContext } from 'react';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport Text from 'ustudio-ui/components/Text';\r\nimport { TextInput } from 'ustudio-ui';\r\nimport styled from 'styled-components';\r\n\r\nimport { FormContext } from '../../context/Context';\r\n\r\ntype ClassificationType = {\r\n  index: number;\r\n  classIndex: number;\r\n};\r\n\r\nconst Btn = styled.button`\r\n  background-color: #ff9700;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const AddClassification = ({ index, classIndex }: ClassificationType) => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const removeClass = () => {\r\n    dispatch({ type: 'remove_class', payload: { index: index, classIndex: classIndex }, path: '' });\r\n  };\r\n\r\n  return (\r\n    <Flex margin={{ top: 'regular', bottom: 'regular' }}>\r\n      <label>\r\n        <Text variant=\"small\">Scheme:</Text>\r\n        <TextInput isDisabled={true} placeholder=\"CPV\" value=\"CPV\" />\r\n      </label>\r\n      <label>\r\n        <Text variant=\"small\">Scheme id:</Text>\r\n        <TextInput\r\n          placeholder=\"id\"\r\n          value={state.tender.items[index].additionalClassification[classIndex].id}\r\n          onChange={(value) =>\r\n            dispatch({\r\n              type: 'set',\r\n              payload: value,\r\n              path: `tender.items[${index}].additionalClassification[${classIndex}].id`,\r\n            })\r\n          }\r\n        />\r\n      </label>\r\n      <label>\r\n        <Text variant=\"small\"> Scheme description:</Text>\r\n        <TextInput\r\n          placeholder=\"description\"\r\n          value={state.tender.items[index].additionalClassification[classIndex].description}\r\n          onChange={(value) =>\r\n            dispatch({\r\n              type: 'set',\r\n              payload: value,\r\n              path: `tender.items[${index}].additionalClassification[${classIndex}].description`,\r\n            })\r\n          }\r\n        />\r\n      </label>\r\n      <Btn onClick={removeClass}>\r\n        <i className=\"fa fa-trash\"></i>\r\n      </Btn>\r\n    </Flex>\r\n  );\r\n};\r\n","import { AddClassification } from './AddClassification';\r\n\r\nexport default AddClassification;\r\n","import React, { useContext } from 'react';\r\nimport { TextInput } from 'ustudio-ui';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport Text from 'ustudio-ui/components/Text';\r\nimport RadioGroup from 'ustudio-ui/components/RadioGroup';\r\nimport { css } from 'styled-components';\r\n\r\nimport { FormContext } from '../../context/Context';\r\nimport AddClassification from '../AddClassification';\r\n\r\ntype ItemType = {\r\n  relatedLot: string;\r\n  value: unknown;\r\n  index: number;\r\n};\r\n\r\nexport const Item = ({ relatedLot, index }: ItemType) => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const removeItem = () => {\r\n    dispatch({ type: 'remove_item', payload: index, path: '' });\r\n  };\r\n\r\n  const addClassification = () => {\r\n    dispatch({\r\n      type: 'set',\r\n      payload: { scheme: 'CPV', id: '', description: '' },\r\n      path: `tender.items[${index}].additionalClassification[${state.tender.items[index].additionalClassification.length}]`,\r\n    });\r\n  };\r\n\r\n  const classification = state.tender.items[index].additionalClassification.map((item, classIndex) => (\r\n    <AddClassification index={index} classIndex={classIndex} key={classIndex} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        direction=\"column\"\r\n        styled={{\r\n          Flex: css`\r\n            margin-top: 10px;\r\n            padding: 15px;\r\n            border: 1px dashed grey;\r\n          `,\r\n        }}\r\n      >\r\n        <label>\r\n          Description\r\n          <TextInput\r\n            onChange={(value) => dispatch({ type: 'set', payload: value, path: `tender.items[${index}].description` })}\r\n          />\r\n        </label>\r\n        <Flex margin={{ top: 'regular', bottom: 'regular' }}>\r\n          <label>\r\n            <Text variant=\"small\">Scheme:</Text>\r\n            <TextInput isDisabled={true} placeholder=\"CPV\" value=\"CPV\" />\r\n          </label>\r\n          <label>\r\n            <Text variant=\"small\">Scheme id:</Text>\r\n            <TextInput\r\n              placeholder=\"id\"\r\n              onChange={(value) =>\r\n                dispatch({ type: 'set', payload: value, path: `tender.items[${index}].classification.id` })\r\n              }\r\n            />\r\n          </label>\r\n          <label>\r\n            <Text variant=\"small\"> Scheme description:</Text>\r\n            <TextInput\r\n              placeholder=\"description\"\r\n              onChange={(value) =>\r\n                dispatch({ type: 'set', payload: value, path: `tender.items.[${index}].classification.description` })\r\n              }\r\n            />\r\n          </label>\r\n        </Flex>\r\n        <label>\r\n          Quantity:\r\n          <TextInput\r\n            name=\"quantity\"\r\n            onChange={(v) => dispatch({ type: 'set', payload: v, path: `tender.items[${index}].quantity` })}\r\n          />\r\n        </label>\r\n        <RadioGroup\r\n          direction=\"row\"\r\n          name=\"unit\"\r\n          options={{\r\n            '1': {\r\n              label: 'metre',\r\n              value: 123,\r\n            },\r\n            '2': {\r\n              label: 'kilo',\r\n              value: 321,\r\n            },\r\n          }}\r\n          onChange={(v) =>\r\n            dispatch({ type: 'set', payload: { id: v.value, name: v.label }, path: `tender.items[${index}].unit` })\r\n          }\r\n          styled={{\r\n            RadioGroup: css`\r\n              margin: auto;\r\n              margin-top: 20px;\r\n            `,\r\n          }}\r\n        />\r\n        {classification}\r\n        <Flex>\r\n          <Button onClick={addClassification}>Add Classification</Button>\r\n        </Flex>\r\n        <Flex alignment={{ horizontal: 'end' }} margin={{ top: 'regular' }}>\r\n          <Button appearance=\"outlined\" intent=\"negative\" onClick={removeItem}>\r\n            Remove Item\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import { Item } from './Item';\r\n\r\nexport default Item;\r\n","import React, { useContext } from 'react';\r\nimport { TextInput } from 'ustudio-ui';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport { css } from 'styled-components';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Item from '../Item';\r\nimport { FormContext } from '../../context/Context';\r\n\r\ntype LotProps = {\r\n  id: string;\r\n  title: string;\r\n  index: number;\r\n};\r\n\r\nexport const Lot = ({ id, title, index }: LotProps) => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n  const itemId = uuid();\r\n\r\n  const removeLot = (id: string) => {\r\n    dispatch({ type: 'REMOVE_LOT', payload: { id: id }, path: `tender.lots[${index}]` });\r\n  };\r\n\r\n  const addItem = () => {\r\n    dispatch({\r\n      type: 'set',\r\n      payload: {\r\n        relatedLot: id,\r\n        id: itemId,\r\n        description: '',\r\n        classification: { sheme: 'CPV' },\r\n        additionalClassification: [],\r\n      },\r\n      path: `tender.items[${state.tender.items.length}]`,\r\n    });\r\n  };\r\n\r\n  const fields = state.tender.items.map((item: any, index: number) => {\r\n    if (item.relatedLot === id) {\r\n      return <Item relatedLot={id} key={item.id} value={item} index={index} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        direction=\"column\"\r\n        styled={{\r\n          Flex: css`\r\n            border: 1px solid grey;\r\n            border-radius: 10px;\r\n            padding: 20px;\r\n            margin: 10px;\r\n          `,\r\n        }}\r\n      >\r\n        <Button appearance=\"outlined\" intent=\"negative\" onClick={() => removeLot(id)}>\r\n          Remove Lot\r\n        </Button>\r\n        <label>\r\n          Lot Title:\r\n          <TextInput\r\n            isRequired\r\n            name=\"title\"\r\n            placeholder=\"Lot Title\"\r\n            onChange={(value) => dispatch({ type: 'set', payload: value, path: `tender.lots[${index}].title` })}\r\n          />\r\n        </label>\r\n        {fields}\r\n        <Flex margin={{ top: 'medium' }} alignment={{ horizontal: 'space-between' }}>\r\n          <Button appearance=\"outlined\" intent=\"positive\" onClick={addItem}>\r\n            Add Item\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import { Lot } from './Lot';\r\n\r\nexport default Lot;\r\n","import { AdditionalLots } from './AdditionalLots';\r\n\r\nexport default AdditionalLots;\r\n","import React, { useContext } from 'react';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FormContext } from '../../context/Context';\r\n\r\nimport Lot from '../Lot';\r\n\r\nexport const AdditionalLots = () => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const lots = state.tender.lots.map((lot, index) => {\r\n    return <Lot id={lot.id} title={lot.title} key={lot.id} index={index} />;\r\n  });\r\n\r\n  const id = uuid();\r\n\r\n  const addLot = () => {\r\n    dispatch({ type: 'set', payload: { title: '', id: id }, path: `tender.lots[${state.tender.lots.length}]` });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {lots}\r\n      <Flex margin={{ top: 'medium' }} alignment={{ horizontal: 'space-around' }}>\r\n        <Button intent=\"positive\" onClick={addLot}>\r\n          Add lot\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport Text from 'ustudio-ui/components/Text';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport { TextInput } from 'ustudio-ui';\r\nimport { TextArea } from 'ustudio-ui';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport { css } from 'styled-components';\r\nimport styled from 'styled-components';\r\nimport 'lodash/set';\r\n\r\nimport AdditionalLots from '../AdditionalLots';\r\nimport { FormContext } from '../../context/Context';\r\n\r\nconst Form = styled.form`\r\n  width: 40%;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Main = () => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(state);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      alignment={{\r\n        horizontal: 'center',\r\n        vertical: 'center',\r\n      }}\r\n      direction=\"column\"\r\n    >\r\n      <Text\r\n        variant=\"h3\"\r\n        styled={{\r\n          Text: css`\r\n            margin: 30px;\r\n          `,\r\n        }}\r\n      >\r\n        Create Tender\r\n      </Text>\r\n      <Form className=\"form\" onSubmit={handleSubmit}>\r\n        <Text variant=\"span\"> Please fill in the fields: </Text>\r\n        <Flex\r\n          direction=\"row\"\r\n          alignment={{ horizontal: 'center' }}\r\n          styled={{\r\n            Flex: css`\r\n              margin: 30px;\r\n            `,\r\n          }}\r\n        >\r\n          <Label>\r\n            Tender title:\r\n            <TextInput\r\n              isRequired\r\n              name=\"title\"\r\n              placeholder=\"Tender Title\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.title' })}\r\n            />\r\n          </Label>\r\n        </Flex>\r\n        <Flex\r\n          alignment={{ horizontal: 'center' }}\r\n          styled={{\r\n            Flex: css`\r\n              margin: 30px;\r\n            `,\r\n          }}\r\n        >\r\n          <Label>\r\n            Tender description\r\n            <TextArea\r\n              isRequired\r\n              name=\"description\"\r\n              placeholder=\"Tender description\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.description' })}\r\n            />\r\n          </Label>\r\n        </Flex>\r\n        <Flex>\r\n          <Label>\r\n            Scheme:\r\n            <TextInput isDisabled={true} placeholder=\"CPV\" value=\"CPV\" />\r\n          </Label>\r\n          <Label>\r\n            Scheme id:\r\n            <TextInput\r\n              placeholder=\"id\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.classification.id' })}\r\n            />\r\n          </Label>\r\n          <Label>\r\n            Scheme description:\r\n            <TextInput\r\n              placeholder=\"description\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.classification.description' })}\r\n            />\r\n          </Label>\r\n        </Flex>\r\n        {/* <RadioGroup\r\n\t\t\t\t\tstyled={{\r\n\t\t\t\t\t\tRadioGroup: css`margin: 30px;`\r\n          }}\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tname=\"unit\"\r\n\t\t\t\t\tonChange={(e) => dispatch({ type: 'ADD_UNIT', payload: {title: e} })}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t'1': { label: 'metre', value: '123' },\r\n\t\t\t\t\t\t'2': { label: 'kilo', value: '312' }\r\n\t\t\t\t\t}}\r\n\t\t\t\t/> */}\r\n        <AdditionalLots />\r\n        <Flex\r\n          alignment={{\r\n            horizontal: 'end',\r\n          }}\r\n          margin={{ top: 'medium', bottom: 'large' }}\r\n        >\r\n          <Button>Submit</Button>\r\n        </Flex>\r\n      </Form>\r\n    </Flex>\r\n  );\r\n};\r\n","import { Main } from './Main';\r\n\r\nexport default Main;\r\n","import { set } from 'lodash';\r\n\r\nexport const reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'set':\r\n      const newState = { ...set(state, action.path, action.payload) };\r\n      return newState;\r\n\r\n    case 'REMOVE_LOT':\r\n      const items = state.tender.items.filter((item: any) => item.relatedLot !== action.payload.id);\r\n      const item1 = state.tender.lots.find((lot: any) => lot.id === action.payload.id);\r\n      const index = state.tender.lots.indexOf(item1);\r\n      const newLot = [...state.tender.lots.slice(0, index), ...state.tender.lots.slice(index + 1)];\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          lots: newLot,\r\n          items: items,\r\n        },\r\n      };\r\n    case 'EDIT_LOT':\r\n      const item = state.tender.lots.find((item: any) => item.id === action.payload.id);\r\n      item.title = action.payload.title;\r\n      return {\r\n        ...state,\r\n      };\r\n    case 'ADD_ITEM':\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items,\r\n            {\r\n              id: action.payload.id,\r\n              description: '',\r\n              relatedLot: action.payload.relatedId,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n    case 'remove_item':\r\n      const newItem = [...state.tender.items.slice(0, action.payload), ...state.tender.items.slice(action.payload + 1)];\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: newItem,\r\n        },\r\n      };\r\n\r\n    case 'remove_class':\r\n      const itemIndex = action.payload.index;\r\n      const classIndex = action.payload.classIndex;\r\n\r\n      const currentItem = state.tender.items[itemIndex];\r\n\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, itemIndex),\r\n            {\r\n              ...currentItem,\r\n              additionalClassification: [\r\n                ...state.tender.items[itemIndex].additionalClassification.slice(0, classIndex),\r\n                ...state.tender.items[itemIndex].additionalClassification.slice(classIndex + 1),\r\n              ],\r\n            },\r\n            ...state.tender.items.slice(itemIndex + 1),\r\n          ],\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\nimport { ThemeProvider } from 'ustudio-ui/theme';\nimport './App.css';\nimport Main from './components/Main';\nimport { FormContext } from './context/Context';\nimport { Data } from './types';\nimport { reducer } from './context/Reducer';\n\nfunction App() {\n\tconst initialState: Data = {\n\t\ttender: {\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\tclassification: {\n\t\t\t\tscheme: 'CPV',\n\t\t\t\tid: '',\n\t\t\t\tdescription: ''\n\t\t\t},\n\t\t\tlots: [],\n\t\t\titems: []\n\t\t}\n\t};\n\n\tconst [ state, dispatch ] = useReducer(reducer, initialState);\n\treturn (\n\t\t<ThemeProvider>\n\t\t\t<FormContext.Provider value={{ state, dispatch }}>\n\t\t\t\t<Main />\n\t\t\t</FormContext.Provider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}