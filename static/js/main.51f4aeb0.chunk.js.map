{"version":3,"sources":["context/Context.tsx","components/AddClassification/AddClassification.tsx","components/AddClassification/index.tsx","components/Item/Item.tsx","components/Item/index.tsx","components/Lot/Lot.tsx","components/Lot/index.tsx","components/AdditionalLots/index.tsx","components/AdditionalLots/AdditionalLots.tsx","components/Main/Main.tsx","components/Main/index.tsx","context/Reducer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FormContext","createContext","state","tender","title","description","classification","scheme","id","lots","items","dispatch","Btn","styled","button","AddClassification","index","classIndex","relatedLot","itemId","useContext","curItem","filter","item","margin","top","bottom","variant","isDisabled","placeholder","value","additionalClassification","onChange","type","payload","path","onClick","className","Item","direction","Flex","css","name","options","label","RadioGroup","map","key","uuid","length","alignment","horizontal","appearance","intent","Lot","removeLot","isRequired","AdditionalLots","lot","Form","form","Label","Main","vertical","Text","onSubmit","e","preventDefault","console","log","reducer","action","set","item1","find","indexOf","newLot","slice","relatedId","newItem","itemIndex","currentItem","t","indx","i","idx","it","it1","id1","it2","id2","quantity","it3","id3","unit","it4","id4","it5","id5","classification1","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.51f4aeb0.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nimport { Data } from '../types';\r\n\r\ntype Action = { type: string; payload: any; path: string };\r\n\r\nconst FormState: Data = {\r\n  tender: {\r\n    title: '',\r\n    description: '',\r\n    classification: {\r\n      scheme: 'CPV',\r\n      id: '',\r\n      description: '',\r\n    },\r\n    lots: [],\r\n    items: [],\r\n  },\r\n};\r\n\r\nexport const FormContext = createContext<{ state: typeof FormState; dispatch: (action: Action) => void }>({\r\n  state: FormState,\r\n  dispatch: () => {},\r\n});\r\n","import React, { useContext } from 'react';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport Text from 'ustudio-ui/components/Text';\r\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\r\nimport styled from 'styled-components';\r\n\r\nimport { FormContext } from '../../context/Context';\r\n\r\ntype ClassificationType = {\r\n  index: number;\r\n  classIndex: number;\r\n  relatedLot: string;\r\n  itemId: string;\r\n};\r\n\r\nconst Btn = styled.button`\r\n  background-color: #ff9700;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const AddClassification = ({ index, classIndex, relatedLot, itemId }: ClassificationType) => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const removeClass = () => {\r\n    dispatch({ type: 'remove_class', payload: { index: index, classIndex: classIndex }, path: '' });\r\n  };\r\n\r\n  const curItem = state.tender.items.filter((item) => item.relatedLot === relatedLot)[0];\r\n\r\n  return (\r\n    <Flex margin={{ top: 'regular', bottom: 'regular' }}>\r\n      <label>\r\n        <Text variant=\"small\">Scheme:</Text>\r\n        <TextInput isDisabled={true} placeholder=\"CPV\" value=\"CPV\" />\r\n      </label>\r\n\r\n      <label>\r\n        <Text variant=\"small\">Scheme id:</Text>\r\n        <TextInput\r\n          placeholder=\"id\"\r\n          value={curItem.additionalClassification[classIndex].id}\r\n          onChange={(value) =>\r\n            dispatch({\r\n              type: 'add_additional_class_id',\r\n              payload: { value: value, itemId: itemId, classIndex: classIndex },\r\n              path: ``,\r\n            })\r\n          }\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        <Text variant=\"small\"> Scheme description:</Text>\r\n        <TextInput\r\n          placeholder=\"description\"\r\n          value={curItem.additionalClassification[classIndex].description}\r\n          onChange={(value) =>\r\n            dispatch({\r\n              type: 'set_additional_class_desc',\r\n              payload: { value: value, itemId: itemId, classIndex: classIndex },\r\n              path: ``,\r\n            })\r\n          }\r\n        />\r\n      </label>\r\n\r\n      <Btn type=\"button\" onClick={removeClass}>\r\n        <i className=\"fa fa-trash\" />\r\n      </Btn>\r\n    </Flex>\r\n  );\r\n};\r\n","import { AddClassification } from './AddClassification';\r\n\r\nexport default AddClassification;\r\n","import React, { useContext } from 'react';\r\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport Text from 'ustudio-ui/components/Text';\r\nimport RadioGroup from 'ustudio-ui/components/RadioGroup';\r\nimport { css } from 'styled-components';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport { FormContext } from '../../context/Context';\r\nimport AddClassification from '../AddClassification';\r\n\r\ntype ItemType = {\r\n  relatedLot: string;\r\n  value: unknown;\r\n  index: number;\r\n  itemId: string;\r\n};\r\n\r\nexport const Item = ({ relatedLot, index, itemId }: ItemType) => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const removeItem = () => {\r\n    dispatch({ type: 'remove_item', payload: index, path: '' });\r\n  };\r\n\r\n  const addClassification = () => {\r\n    dispatch({\r\n      type: 'add_class',\r\n      payload: { scheme: 'CPV', id: '', description: '', relatedLot: relatedLot, index: index, itemId: itemId },\r\n      path: `tender.items[${index}].additionalClassification[${state.tender.items[index].additionalClassification.length}]`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        direction=\"column\"\r\n        styled={{\r\n          Flex: css`\r\n            margin-top: 10px;\r\n            padding: 15px;\r\n            border: 1px dashed grey;\r\n          `,\r\n        }}\r\n      >\r\n        <label>\r\n          Description\r\n          <TextInput\r\n            onChange={(value) =>\r\n              dispatch({\r\n                type: 'set_item_desc',\r\n                payload: { value: value, relatedLot: relatedLot, itemId: itemId },\r\n                path: ``,\r\n              })\r\n            }\r\n          />\r\n        </label>\r\n\r\n        <Flex margin={{ top: 'regular', bottom: 'regular' }}>\r\n          <label>\r\n            <Text variant=\"small\">Scheme:</Text>\r\n            <TextInput isDisabled={true} placeholder=\"CPV\" value=\"CPV\" />\r\n          </label>\r\n\r\n          <label>\r\n            <Text variant=\"small\">Scheme id:</Text>\r\n            <TextInput\r\n              placeholder=\"id\"\r\n              onChange={(value) =>\r\n                dispatch({ type: 'set_class_id', payload: { value: value, itemId: itemId }, path: `` })\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <Text variant=\"small\"> Scheme description:</Text>\r\n            <TextInput\r\n              placeholder=\"description\"\r\n              onChange={(value) =>\r\n                dispatch({ type: 'set_class_desc', payload: { value: value, itemId: itemId }, path: `` })\r\n              }\r\n            />\r\n          </label>\r\n        </Flex>\r\n        <label>\r\n          Quantity:\r\n          <TextInput\r\n            name=\"quantity\"\r\n            onChange={(value) =>\r\n              dispatch({ type: 'set_quantity', payload: { value: value, itemId: itemId }, path: `` })\r\n            }\r\n          />\r\n        </label>\r\n\r\n        <RadioGroup\r\n          direction=\"row\"\r\n          name=\"unit\"\r\n          options={{\r\n            '1': {\r\n              label: 'metre',\r\n              value: 123,\r\n            },\r\n            '2': {\r\n              label: 'kilo',\r\n              value: 321,\r\n            },\r\n          }}\r\n          onChange={({ value, label }) =>\r\n            dispatch({ type: 'set_unit', payload: { id: value, name: label, itemId: itemId }, path: `` })\r\n          }\r\n          styled={{\r\n            RadioGroup: css`\r\n              margin: auto;\r\n              margin-top: 20px;\r\n            `,\r\n          }}\r\n        />\r\n\r\n        {state.tender.items\r\n          .filter((item) => item.relatedLot === relatedLot)\r\n          [index].additionalClassification.map((item, classIndex) => (\r\n            <AddClassification\r\n              index={index}\r\n              classIndex={classIndex}\r\n              key={uuid()}\r\n              relatedLot={relatedLot}\r\n              itemId={itemId}\r\n            />\r\n          ))}\r\n\r\n        <Flex>\r\n          <Button type=\"button\" onClick={addClassification}>\r\n            Add Classification\r\n          </Button>\r\n        </Flex>\r\n\r\n        <Flex alignment={{ horizontal: 'end' }} margin={{ top: 'regular' }}>\r\n          <Button type=\"button\" appearance=\"outlined\" intent=\"negative\" onClick={removeItem}>\r\n            Remove Item\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import { Item } from './Item';\r\n\r\nexport default Item;\r\n","import React, { useContext } from 'react';\r\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport { css } from 'styled-components';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Item from '../Item';\r\nimport { FormContext } from '../../context/Context';\r\n\r\ntype LotProps = {\r\n  id: string;\r\n  title: string;\r\n  index: number;\r\n};\r\n\r\nexport const Lot = ({ id, title, index }: LotProps) => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const removeLot = (id: string) => {\r\n    dispatch({ type: 'REMOVE_LOT', payload: { id: id }, path: `tender.lots[${index}]` });\r\n  };\r\n\r\n  const itemId = uuid();\r\n  const addItem = () => {\r\n    dispatch({\r\n      type: 'set',\r\n      payload: {\r\n        relatedLot: id,\r\n        id: itemId,\r\n        description: '',\r\n        classification: { scheme: 'CPV' },\r\n        additionalClassification: [],\r\n      },\r\n      path: `tender.items[${state.tender.items.length}]`,\r\n    });\r\n  };\r\n\r\n  const items = state.tender.items\r\n    .filter((item) => item.relatedLot === id)\r\n    .map((item: any, index: number) => (\r\n      <Item relatedLot={id} key={item.id} value={item} index={index} itemId={item.id} />\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        direction=\"column\"\r\n        styled={{\r\n          Flex: css`\r\n            border: 1px solid grey;\r\n            border-radius: 10px;\r\n            padding: 20px;\r\n            margin: 10px;\r\n          `,\r\n        }}\r\n      >\r\n        <Button appearance=\"outlined\" intent=\"negative\" onClick={() => removeLot(id)}>\r\n          Remove Lot\r\n        </Button>\r\n\r\n        <label>\r\n          Lot Title:\r\n          <TextInput\r\n            isRequired\r\n            name=\"title\"\r\n            placeholder=\"Lot Title\"\r\n            onChange={(value) => dispatch({ type: 'set', payload: value, path: `tender.lots[${index}].title` })}\r\n          />\r\n        </label>\r\n\r\n        {items}\r\n\r\n        <Flex margin={{ top: 'medium' }} alignment={{ horizontal: 'space-between' }}>\r\n          <Button type=\"button\" appearance=\"outlined\" intent=\"positive\" onClick={addItem}>\r\n            Add Item\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import { Lot } from './Lot';\r\n\r\nexport default Lot;\r\n","import { AdditionalLots } from './AdditionalLots';\r\n\r\nexport default AdditionalLots;\r\n","import React, { useContext } from 'react';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FormContext } from '../../context/Context';\r\n\r\nimport Lot from '../Lot';\r\n\r\nexport const AdditionalLots = () => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const addLot = () => {\r\n    dispatch({ type: 'set', payload: { title: '', id: uuid() }, path: `tender.lots[${state.tender.lots.length}]` });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state.tender.lots.map((lot, index) => (\r\n        <Lot id={lot.id} title={lot.title} key={lot.id} index={index} />\r\n      ))}\r\n\r\n      <Flex margin={{ top: 'medium' }} alignment={{ horizontal: 'space-around' }}>\r\n        <Button type='button' intent=\"positive\" onClick={addLot}>\r\n          Add lot\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport Text from 'ustudio-ui/components/Text';\r\nimport Flex from 'ustudio-ui/components/Flex';\r\nimport TextInput from 'ustudio-ui/components/Input/TextInput';\r\nimport TextArea from 'ustudio-ui/components/Input/TextArea';\r\nimport Button from 'ustudio-ui/components/Button';\r\nimport { css } from 'styled-components';\r\nimport styled from 'styled-components';\r\n\r\nimport AdditionalLots from '../AdditionalLots';\r\nimport { FormContext } from '../../context/Context';\r\n\r\nconst Form = styled.form`\r\n  width: 40%;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Main = () => {\r\n  const { state, dispatch } = useContext(FormContext);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(state);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      alignment={{\r\n        horizontal: 'center',\r\n        vertical: 'center',\r\n      }}\r\n      direction=\"column\"\r\n    >\r\n      <Text\r\n        variant=\"h3\"\r\n        styled={{\r\n          Text: css`\r\n            margin: 30px;\r\n          `,\r\n        }}\r\n      >\r\n        Create Tender\r\n      </Text>\r\n\r\n      <Form className=\"form\" onSubmit={handleSubmit}>\r\n        <Text variant=\"span\"> Please fill in the fields: </Text>\r\n        <Flex\r\n          direction=\"row\"\r\n          alignment={{ horizontal: 'center' }}\r\n          styled={{\r\n            Flex: css`\r\n              margin: 30px;\r\n            `,\r\n          }}\r\n        >\r\n          <Label>\r\n            Tender title:\r\n            <TextInput\r\n              isRequired\r\n              name=\"title\"\r\n              placeholder=\"Tender Title\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.title' })}\r\n            />\r\n          </Label>\r\n        </Flex>\r\n\r\n        <Flex\r\n          alignment={{ horizontal: 'center' }}\r\n          styled={{\r\n            Flex: css`\r\n              margin: 30px;\r\n            `,\r\n          }}\r\n        >\r\n          <Label>\r\n            Tender description\r\n            <TextArea\r\n              isRequired\r\n              name=\"description\"\r\n              placeholder=\"Tender description\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.description' })}\r\n            />\r\n          </Label>\r\n        </Flex>\r\n\r\n        <Flex>\r\n          <Label>\r\n            Scheme:\r\n            <TextInput isDisabled={true} placeholder=\"CPV\" value=\"CPV\" />\r\n          </Label>\r\n\r\n          <Label>\r\n            Scheme id:\r\n            <TextInput\r\n              placeholder=\"id\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.classification.id' })}\r\n            />\r\n          </Label>\r\n\r\n          <Label>\r\n            Scheme description:\r\n            <TextInput\r\n              placeholder=\"description\"\r\n              onChange={(value) => dispatch({ type: 'set', payload: value, path: 'tender.classification.description' })}\r\n            />\r\n          </Label>\r\n        </Flex>\r\n\r\n        <AdditionalLots />\r\n\r\n        <Flex\r\n          alignment={{\r\n            horizontal: 'end',\r\n          }}\r\n          margin={{ top: 'medium', bottom: 'large' }}\r\n        >\r\n          <Button>Submit</Button>\r\n        </Flex>\r\n      </Form>\r\n    </Flex>\r\n  );\r\n};\r\n","import { Main } from './Main';\r\n\r\nexport default Main;\r\n","import { set } from 'lodash';\r\n\r\nexport const reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'set':\r\n      const newState = { ...set(state, action.path, action.payload) };\r\n      return newState;\r\n\r\n    case 'REMOVE_LOT':\r\n      const items = state.tender.items.filter((item: any) => item.relatedLot !== action.payload.id);\r\n      const item1 = state.tender.lots.find((lot: any) => lot.id === action.payload.id);\r\n      const index = state.tender.lots.indexOf(item1);\r\n      const newLot = [...state.tender.lots.slice(0, index), ...state.tender.lots.slice(index + 1)];\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          lots: newLot,\r\n          items: items,\r\n        },\r\n      };\r\n    case 'EDIT_LOT':\r\n      const item = state.tender.lots.find((item: any) => item.id === action.payload.id);\r\n      item.title = action.payload.title;\r\n      return {\r\n        ...state,\r\n      };\r\n    case 'ADD_ITEM':\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items,\r\n            {\r\n              id: action.payload.id,\r\n              description: '',\r\n              relatedLot: action.payload.relatedId,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n    case 'remove_item':\r\n      const newItem = [...state.tender.items.slice(0, action.payload), ...state.tender.items.slice(action.payload + 1)];\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: newItem,\r\n        },\r\n      };\r\n\r\n    case 'remove_class':\r\n      const itemIndex = action.payload.index;\r\n      const classIndex = action.payload.classIndex;\r\n\r\n      const currentItem = state.tender.items[itemIndex];\r\n\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, itemIndex),\r\n            {\r\n              ...currentItem,\r\n              additionalClassification: [\r\n                ...state.tender.items[itemIndex].additionalClassification.slice(0, classIndex),\r\n                ...state.tender.items[itemIndex].additionalClassification.slice(classIndex + 1),\r\n              ],\r\n            },\r\n            ...state.tender.items.slice(itemIndex + 1),\r\n          ],\r\n        },\r\n      };\r\n\r\n    case 'add_class':\r\n      const t = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const indx = state.tender.items.indexOf(t);\r\n\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, indx),\r\n            {\r\n              ...t,\r\n              additionalClassification: [\r\n                ...t.additionalClassification,\r\n                {\r\n                  scheme: action.payload.scheme,\r\n                  id: action.payload.id,\r\n                  description: action.payload.description,\r\n                },\r\n              ],\r\n            },\r\n            ...state.tender.items.slice(indx + 1),\r\n          ],\r\n        },\r\n      };\r\n    case 'set_item_desc':\r\n      const i = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const idx = state.tender.items.indexOf(i);\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, idx),\r\n            {\r\n              ...i,\r\n              description: action.payload.value,\r\n            },\r\n            ...state.tender.items.slice(idx + 1),\r\n          ],\r\n        },\r\n      };\r\n    case 'set_class_id':\r\n      const it = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const id = state.tender.items.indexOf(it);\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, id),\r\n            {\r\n              ...it,\r\n              classification: {\r\n                ...it.classification,\r\n                id: action.payload.value,\r\n              },\r\n            },\r\n            ...state.tender.items.slice(id + 1),\r\n          ],\r\n        },\r\n      };\r\n\r\n    case 'set_class_desc':\r\n      const it1 = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const id1 = state.tender.items.indexOf(it1);\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, id1),\r\n            {\r\n              ...it1,\r\n              classification: {\r\n                ...it1.classification,\r\n                description: action.payload.value,\r\n              },\r\n            },\r\n            ...state.tender.items.slice(id1 + 1),\r\n          ],\r\n        },\r\n      };\r\n    case 'set_quantity':\r\n      const it2 = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const id2 = state.tender.items.indexOf(it2);\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, id2),\r\n            {\r\n              ...it2,\r\n              quantity: action.payload.value,\r\n            },\r\n            ...state.tender.items.slice(id2 + 1),\r\n          ],\r\n        },\r\n      };\r\n    case 'set_unit':\r\n      const it3 = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const id3 = state.tender.items.indexOf(it3);\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, id3),\r\n            {\r\n              ...it3,\r\n              unit: {\r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n              },\r\n            },\r\n            ...state.tender.items.slice(id3 + 1),\r\n          ],\r\n        },\r\n      };\r\n    case 'add_additional_class_id':\r\n      const it4 = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const id4 = state.tender.items.indexOf(it4);\r\n      const classification = it4.additionalClassification[action.payload.classIndex];\r\n\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, id4),\r\n            {\r\n              ...it4,\r\n              additionalClassification: [\r\n                ...it4.additionalClassification.slice(0, action.payload.classIndex),\r\n                {\r\n                  ...classification,\r\n                  id: action.payload.value,\r\n                },\r\n                ...it4.additionalClassification.slice(action.payload.classIndex + 1),\r\n              ],\r\n            },\r\n            ...state.tender.items.slice(id4 + 1),\r\n          ],\r\n        },\r\n      };\r\n    case 'set_additional_class_desc':\r\n      const it5 = state.tender.items.filter((item: any) => item.id === action.payload.itemId)[0];\r\n      const id5 = state.tender.items.indexOf(it5);\r\n      const classification1 = it5.additionalClassification[action.payload.classIndex];\r\n\r\n      return {\r\n        tender: {\r\n          ...state.tender,\r\n          items: [\r\n            ...state.tender.items.slice(0, id5),\r\n            {\r\n              ...it5,\r\n              additionalClassification: [\r\n                ...it5.additionalClassification.slice(0, action.payload.classIndex),\r\n                {\r\n                  ...classification1,\r\n                  description: action.payload.value,\r\n                },\r\n                ...it5.additionalClassification.slice(action.payload.classIndex + 1),\r\n              ],\r\n            },\r\n            ...state.tender.items.slice(id5 + 1),\r\n          ],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\nimport { ThemeProvider } from 'ustudio-ui/theme';\nimport './App.css';\nimport Main from './components/Main';\nimport { FormContext } from './context/Context';\nimport { Data } from './types';\nimport { reducer } from './context/Reducer';\n\nfunction App() {\n\tconst initialState: Data = {\n\t\ttender: {\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\tclassification: {\n\t\t\t\tscheme: 'CPV',\n\t\t\t\tid: '',\n\t\t\t\tdescription: ''\n\t\t\t},\n\t\t\tlots: [],\n\t\t\titems: []\n\t\t}\n\t};\n\n\tconst [ state, dispatch ] = useReducer(reducer, initialState);\n\treturn (\n\t\t<ThemeProvider>\n\t\t\t<FormContext.Provider value={{ state, dispatch }}>\n\t\t\t\t<Main />\n\t\t\t</FormContext.Provider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}